# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
zmodload zsh/zprof
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
autoload bashcompinit
bashcompinit

# You may need to manually set your language environment
#export LANG=fr_FR.UTF-8
# export LC_ALL=""

# If you come from bash you might have to change your $PATH.
  export PATH=$HOME/bin:/usr/local/bin:$HOME/.local/bin:$PATH

# Added Path
  export PATH=$HOME/Scripts:$HOME/snap:$PATH

# Do not autocorrect
  unsetopt correct_all

POWERLEVEL9K_MODE="awesome-fontconfig"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
#COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="dd.mm.yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  archlinux
  common-aliases
  command-not-found
  copydir
  copyfile
  cp
  git
  # sudo
  systemd
  # vi-mode
  wd
  web-search
  zsh-autosuggestions
  zsh-completions
  zsh-syntax-highlighting
  z
)


# User configuration

 export MANPATH="/usr/local/man:$MANPATH"

# Alisases
 alias 0="cd ~/CurrentProject"
 alias :q="exit"
 alias duda="du -ahd 1"
 alias duhs="du -hs * | sort -h"
 # alias mimeo="mimeopen"
 alias mount-verbose="mount -v | grep \"^/\" | awk '{print \"\nPartition identifier: \" $1  \"\n Mountpoint: \"  $3}\'"
 alias google-java-format="java ~/Repositories/google-java-format/core/target/google-java-format-1.10-SNAPSHOT-all-deps.jar"

#Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
  export ZSH_THEME="robbyrussell"
else
  export EDITOR='vim'
  export ZSH_THEME="powerlevel10k/powerlevel10k"
fi
source $ZSH/oh-my-zsh.sh

# Adding personal autocompletions
# fpath=(~/my-config/Scripts/autocomplete $fpath)

# ssh
export SSH_KEY_PATH="~/.ssh/id_rsa"

# Go to https://user-images.githubusercontent.com/704406/43988708-64c0fa52-9d4c-11e8-8cf9-c4d4b97a5200.png for color code

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir virtualenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs anaconda time)
POWERLEVEL9K_ANACONDA_LEFT_DELIMITER=''
POWERLEVEL9K_ANACONDA_RIGHT_DELIMITER=''
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
# POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND='238'
# POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND='178'
# POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
# POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND='026'
# POWERLEVEL9K_DIR_HOME_BACKGROUND='061'
# POWERLEVEL9K_DIR_BACKGROUND='060'
# POWERLEVEL9K_DIR_PATH_HIGHLIGHT_BOLD=true

# `git hub colors`
# POWERLEVEL9K_VCS_CLEAN_BACKGROUND='236'
# POWERLEVEL9K_VCS_CLEAN_BACKGROUND='119'
# POWERLEVEL9K_VCS_CLEAN_FOREGROUND='236'
# POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='214'
# POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='238'
# POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='167'
# POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='238'



#POWERLEVEL9K_ANACONDA_FOREGROUND='teal'
POWERLEVEL9K_ANACONDA_BACKGROUND='045'
POWERLEVEL9K_VIRTUALENV_BACKGROUND='045'
POWERLEVEL9K_RPROMPT_ON_NEWLINE=true

# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.
if [ -s "$HOME/.nvm/nvm.sh" ]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
    alias nvm='unalias nvm node npm && . "$NVM_DIR"/nvm.sh && nvm'
    alias node='unalias nvm node npm && . "$NVM_DIR"/nvm.sh && node'
    alias npm='unalias nvm node npm && . "$NVM_DIR"/nvm.sh && npm'
fi
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# if [ -f `which powerline-daemon` ]; then
#   powerline-daemon -q
#   POWERLINE_BASH_CONTINUATION=1
#   POWERLINE_BASH_SELECT=1
#   . /usr/share/powerline/bash/powerline.sh
# fi


################### Keybindings ################################

autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

[[ -n "$key[Up]"   ]] && bindkey -- "$key[Up]"   up-line-or-history
[[ -n "$key[Down]" ]] && bindkey -- "$key[Down]" down-line-or-history
# [[ -n "$key[Left]"   ]] && bindkey -- "$key[Left]" backward-word
# [[ -n "$key[Right]" ]] && bindkey -- "$key[Right]" forward-word

bindkey "^P" up-line-or-beginning-search
bindkey "^N" down-line-or-beginning-search
bindkey -r "^K"
bindkey -r "^J"
bindkey "^G" insert-last-word
bindkey "^H" backward-word
# bindkey "^K" up-line-or-beginning-search
# bindkey "^J" down-line-or-beginning-search
# bindkey "^H" backward-char
# bindkey "^D" backward-delete-char
# bindkey "^L" forward-char
# bindkey "^N" clear-screen

####################### Custom autocompletion ######################

compctl -/ -W ~/CurrentProject uvim
function swap()
{
  local TMPFILE=tmp.$$
  mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}

######################## Unaliases #################################

#unalias fd

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
# source ~/.local/bin/virtualenvwrapper.sh
POWERLEVEL9K_DISABLE_GITSTATUS=true

######################## ZSH Autopair ##############################
if [[ ! -d ~/.zsh-autopair ]]; then
  git clone https://github.com/hlissner/zsh-autopair ~/.zsh-autopair
fi

source ~/.zsh-autopair/autopair.zsh
autopair-init

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/emmanuel.tran/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/emmanuel.tran/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/emmanuel.tran/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/emmanuel.tran/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# store key in the login keychain instead of aws-vault managing a hidden keychain
export AWS_VAULT_KEYCHAIN_NAME=login

# tweak session times so you dont have to re-enter passwords every 5min
export AWS_SESSION_TTL=24h
export AWS_ASSUME_ROLE_TTL=1h
export JAVA_HOME=$(/usr/libexec/java_home -v 14)
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
